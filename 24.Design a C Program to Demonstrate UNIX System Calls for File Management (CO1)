// Program: UNIX System Calls for File Management
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>     // For open() flags
#include <unistd.h>    // For read(), write(), close(), unlink()
#include <string.h>

int main() {
    int fd;
    char buffer[100];
    ssize_t bytesRead;

    // 1. Open or create a file
    fd = open("demo.txt", O_CREAT | O_RDWR | O_TRUNC, 0644);
    if (fd < 0) {
        perror("Error opening file");
        exit(1);
    }
    printf("File created/opened successfully using open().\n");

    // 2. Write data into the file
    char data[] = "Hello, this text is written using write() system call.\n";
    if (write(fd, data, strlen(data)) < 0) {
        perror("Error writing file");
        close(fd);
        exit(1);
    }
    printf("Data written successfully using write().\n");

    // 3. Move file pointer to the beginning
    lseek(fd, 0, SEEK_SET);

    // 4. Read data from the file
    bytesRead = read(fd, buffer, sizeof(buffer) - 1);
    if (bytesRead < 0) {
        perror("Error reading file");
        close(fd);
        exit(1);
    }
    buffer[bytesRead] = '\0';
    printf("Data read from file using read():\n%s", buffer);

    // 5. Close the file
    close(fd);
    printf("File closed successfully using close().\n");

    // 6. Delete the file
    if (unlink("demo.txt") == 0)
        printf("File deleted successfully using unlink().\n");
    else
        perror("Error deleting file");

    return 0;
}
