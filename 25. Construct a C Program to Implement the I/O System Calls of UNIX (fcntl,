// Program: UNIX I/O System Calls Demonstration
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>
#include <unistd.h>
#include <sys/stat.h>
#include <dirent.h>
#include <string.h>

int main() {
    int fd;
    struct stat st;
    char buf[100];

    // 1. Create or open file
    fd = open("io_demo.txt", O_CREAT | O_RDWR | O_TRUNC, 0644);
    if (fd < 0) {
        perror("open");
        exit(1);
    }
    printf("File created successfully.\n");

    // 2. Write some data
    write(fd, "Operating Systems Lab - UNIX I/O System Calls\n", 45);

    // 3. Move file pointer using lseek()
    lseek(fd, 0, SEEK_SET);
    read(fd, buf, sizeof(buf) - 1);
    printf("Data read using lseek() and read(): %s\n", buf);

    // 4. Display file information using stat()
    if (stat("io_demo.txt", &st) == 0) {
        printf("\nFile Information (stat):\n");
        printf("File Size: %ld bytes\n", st.st_size);
        printf("Number of Links: %ld\n", st.st_nlink);
        printf("File Permissions: %o\n", st.st_mode & 0777);
    }

    // 5. File control operation using fcntl()
    int flags = fcntl(fd, F_GETFD);
    printf("\nFile descriptor flag (fcntl): %d\n", flags);

    // 6. Directory operations using opendir() and readdir()
    DIR *dir;
    struct dirent *entry;
    dir = opendir(".");
    if (dir == NULL) {
        perror("opendir");
        exit(1);
    }

    printf("\nCurrent Directory Files:\n");
    while ((entry = readdir(dir)) != NULL) {
        printf("  %s\n", entry->d_name);
    }
    closedir(dir);
    close(fd);
    return 0;
}
